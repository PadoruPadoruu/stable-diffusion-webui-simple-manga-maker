class LayerManager{constructor(containerElement){this.container=containerElement;this.layers=[];this.activeLayerIndex=0;this.backgroundColor='#ffffff';this._compositeCanvas=document.createElement('canvas');this._compositeCtx=this._compositeCanvas.getContext('2d',{willReadFrequently:true});this.width=800;this.height=600;this._init();}_init(){this._compositeCanvas.width=this.width;this._compositeCanvas.height=this.height;this.addLayer();console.log('LayerManager初期化完了:',this.layers.length,'レイヤー');}resize(width,height){this.width=width;this.height=height;this.layers.forEach(layer=>{const tempCanvas=document.createElement('canvas');tempCanvas.width=layer.canvas.width;tempCanvas.height=layer.canvas.height;const tempCtx=tempCanvas.getContext('2d');tempCtx.drawImage(layer.canvas,0,0);layer.canvas.width=width;layer.canvas.height=height;layer.ctx.drawImage(tempCanvas,0,0);});this._compositeCanvas.width=width;this._compositeCanvas.height=height;this.render();}addLayer(options={}){const canvas=document.createElement('canvas');canvas.width=this.width;canvas.height=this.height;canvas.style.position='absolute';canvas.style.left='0';canvas.style.top='0';canvas.style.width='100%';canvas.style.height='100%';canvas.style.pointerEvents='none';const ctx=canvas.getContext('2d',{willReadFrequently:true});const layer={id:Date.now()+Math.floor(Math.random()*1000),name:options.name||`レイヤー ${this.layers.length+1}`,canvas:canvas,ctx:ctx,visible:options.visible!==undefined?options.visible:true,opacity:options.opacity!==undefined?options.opacity:1.0,blendMode:options.blendMode||BlendModes.NORMAL};this.container.appendChild(canvas);this.layers.push(layer);this.activeLayerIndex=this.layers.length-1;console.log(`レイヤー追加: ${layer.name}, index=${this.activeLayerIndex}`);return layer;}removeLayer(index){if(index<0||index>=this.layers.length||this.layers.length<=1){return;}this.container.removeChild(this.layers[index].canvas);this.layers.splice(index,1);if(this.activeLayerIndex>=this.layers.length){this.activeLayerIndex=this.layers.length-1;}}moveLayer(fromIndex,toIndex){if(fromIndex<0||fromIndex>=this.layers.length||toIndex<0||toIndex>=this.layers.length){return;}const layer=this.layers.splice(fromIndex,1)[0];this.layers.splice(toIndex,0,layer);if(this.activeLayerIndex===fromIndex){this.activeLayerIndex=toIndex;}else if(this.activeLayerIndex>fromIndex&&this.activeLayerIndex<=toIndex){this.activeLayerIndex--;}else if(this.activeLayerIndex<fromIndex&&this.activeLayerIndex>=toIndex){this.activeLayerIndex++;}this.render();}setActiveLayer(index){if(index>=0&&index<this.layers.length){this.activeLayerIndex=index;console.log(`アクティブレイヤー変更: index=${index}, name=${this.layers[index].name}`);}}getActiveLayer(){return this.layers[this.activeLayerIndex];}getActiveContext(){const layer=this.getActiveLayer();console.log(`アクティブコンテキスト取得: layer=${layer.name}`);return layer.ctx;}updateLayerSettings(index,settings){if(index<0||index>=this.layers.length){return;}const layer=this.layers[index];if(settings.name!==undefined){layer.name=settings.name;}if(settings.visible!==undefined){layer.visible=settings.visible;}if(settings.opacity!==undefined){layer.opacity=MathUtils.clamp(settings.opacity,0,1);}if(settings.blendMode!==undefined){layer.blendMode=settings.blendMode;}this.render();}clear(){this.layers.forEach(layer=>{layer.ctx.clearRect(0,0,this.width,this.height);});this.render();}clearLayer(index){if(index>=0&&index<this.layers.length){this.layers[index].ctx.clearRect(0,0,this.width,this.height);this.render();}}render(){this.layers.forEach((layer,idx)=>{layer.canvas.style.zIndex=idx+1;layer.canvas.style.visibility=layer.visible?'visible':'hidden';layer.canvas.style.opacity=layer.opacity;});}toDataURL(format='image/png',quality=0.92){this._compositeCtx.fillStyle=this.backgroundColor;this._compositeCtx.fillRect(0,0,this.width,this.height);this.layers.forEach(layer=>{if(layer.visible&&layer.opacity>0){this._compositeCtx.globalCompositeOperation=BlendModes.getCanvasCompositeName(layer.blendMode);this._compositeCtx.globalAlpha=layer.opacity;this._compositeCtx.drawImage(layer.canvas,0,0);}});return this._compositeCanvas.toDataURL(format,quality);}getLayerImageData(index){if(index<0||index>=this.layers.length){return null;}const layer=this.layers[index];return layer.ctx.getImageData(0,0,this.width,this.height);}setLayerImageData(index,imageData){if(index<0||index>=this.layers.length){return;}const layer=this.layers[index];layer.ctx.putImageData(imageData,0,0);this.render();}}